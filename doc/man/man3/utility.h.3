.TH "code/threads/utility.h" 3 "Tue Dec 19 2017" "Version nachos-teamd" "OS-Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
code/threads/utility.h \- 
.SH SYNOPSIS
.br
.PP
\fC#include 'copyright\&.h'\fP
.br
\fC#include <bool\&.h>\fP
.br
\fC#include 'sysdep\&.h'\fP
.br

.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBdivRoundDown\fP(n,  s)   ((n) / (s))"
.br
.ti -1c
.RI "#define \fBdivRoundUp\fP(n,  s)   (((n) / (s)) + ((((n) % (s)) > 0) ? 1 : 0))"
.br
.ti -1c
.RI "#define \fBASSERT\fP(condition)"
.br
.ti -1c
.RI "#define \fBMIN\fP(a,  b)   (a > b ? b : a)"
.br
.in -1c
.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef void(* \fBVoidFunctionPtr\fP) (int arg)"
.br
.ti -1c
.RI "typedef void(* \fBVoidNoArgFunctionPtr\fP) ()"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "void \fBDebugInit\fP (const char *flags)"
.br
.ti -1c
.RI "bool \fBDebugIsEnabled\fP (char flag)"
.br
.ti -1c
.RI "void \fBDEBUG\fP (char flag, const char *format,\&.\&.\&.)"
.br
.in -1c
.SH "Macro Definition Documentation"
.PP 
.SS "#define ASSERT(condition)"
\fBValue:\fP
.PP
.nf
if (!(condition)) {                                                       \
        fprintf(stderr, "Assertion failed: line %d, file \"%s\"\n",           \
                __LINE__, __FILE__);                                          \
    fflush(stderr);                               \\
        Abort();                                                              \
    }
.fi
.PP
Definition at line 73 of file utility\&.h\&.
.SS "#define divRoundDown(n, s)   ((n) / (s))"

.PP
Definition at line 36 of file utility\&.h\&.
.SS "#define divRoundUp(n, s)   (((n) / (s)) + ((((n) % (s)) > 0) ? 1 : 0))"

.PP
Definition at line 37 of file utility\&.h\&.
.SS "#define MIN(a, b)   (a > b ? b : a)"

.PP
Definition at line 81 of file utility\&.h\&.
.SH "Typedef Documentation"
.PP 
.SS "typedef void(* VoidFunctionPtr) (int arg)"

.PP
Definition at line 48 of file utility\&.h\&.
.SS "typedef void(* VoidNoArgFunctionPtr) ()"

.PP
Definition at line 49 of file utility\&.h\&.
.SH "Function Documentation"
.PP 
.SS "void DEBUG (char flag, const char * format,  \&.\&.\&.)"

.PP
Definition at line 61 of file utility\&.cc\&.
.SS "void DebugInit (const char * flags)"

.PP
Definition at line 34 of file utility\&.cc\&.
.SS "bool DebugIsEnabled (char flag)"

.PP
Definition at line 45 of file utility\&.cc\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for OS-Project from the source code\&.
